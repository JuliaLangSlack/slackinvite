type Name {
  first: String
  last: String
}

enum InviteStatus {
  ACCEPTED
  DENIED
  PENDING
}

type Status {
  code: Int
  msg: String
}

type InviteRequest {
  id: ID
  email: String
  name: Name
  comment: String
  status: InviteStatus
  github: String
}

type Version {
  major: Int
  minor: Int
  patch: Int
  string: String
}

type Query {
  getRequests: [InviteRequest]
  version: Version
}

type RequestStatus {
  request: InviteRequest
  status: Status
}

type Mutation {
  addRequest(email:String, first:String, last:String, github:String) : RequestStatus
  changeRequestStatus(id:ID, status:RequestStatus): RequestStatus
}
